{"version":3,"sources":["webpack:///./routes/profile/index.tsx","webpack:///./routes/profile/style.css"],"names":["Profile","state","time","Date","now","count","timer","updateTime","_this","setState","increment","componentDidMount","this","window","setInterval","componentWillUnmount","clearInterval","render","_ref","_ref2","user","Object","preact__WEBPACK_IMPORTED_MODULE_0__","class","style","toLocaleString","onClick","Component","module","exports","profile","page-enter","pageEnter","page-enter-active","pageEnterActive","page-exit","pageExit","page-exit-active","pageExitActive"],"mappings":"oKAWqBA,sJACZC,MAAQ,CACbC,KAAMC,KAAKC,MACXC,MAAO,MAGFC,eAcAC,WAAa,WAClBC,EAAKC,SAAS,CAAEP,KAAMC,KAAKC,WAGtBM,UAAY,WACjBF,EAAKC,SAAS,CAAEJ,MAAOG,EAAKP,MAAMI,MAAQ,iIAhBrCM,kBAAP,WAEEC,KAAKN,MAAQO,OAAOC,YAAYF,KAAKL,WAAY,QAI5CQ,qBAAP,WACEC,cAAcJ,KAAKN,UAWdW,OAAP,SAAAC,EAAAC,GAAuD,IAAvCC,EAAuCF,EAAvCE,KAAiBlB,EAAsBiB,EAAtBjB,KAAMG,EAAgBc,EAAhBd,MACrC,OACEgB,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAOC,WACVH,OAAAC,EAAA,EAAAD,CAAA,sBAAcD,GACdC,OAAAC,EAAA,EAAAD,CAAA,sDAA8CD,EAA9C,KAEAC,OAAAC,EAAA,EAAAD,CAAA,4BAAoB,IAAIlB,KAAKD,GAAMuB,kBAEnCJ,OAAAC,EAAA,EAAAD,CAAA,SACEA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,QAASd,KAAKF,WAAtB,YADF,YAC8DL,EAAO,IADrE,eAnC6BsB,uBCVrCC,EAAAC,QAAA,CAAkBC,QAAA,UAAAC,aAAA,aAAAC,UAAA,aAAAC,oBAAA,oBAAAC,gBAAA,oBAAAC,YAAA,YAAAC,SAAA,YAAAC,mBAAA,mBAAAC,eAAA","file":"route-profile/index.tsx.chunk.ac71d.js","sourcesContent":["import { Component, h } from 'preact';\nimport * as style from './style.css';\n\ninterface Props {\n  user: string;\n}\n\ninterface State {\n  time: number;\n  count: number;\n}\nexport default class Profile extends Component<Props, State> {\n  public state = {\n    time: Date.now(),\n    count: 10\n  };\n\n  public timer?: number;\n\n  // gets called when this route is navigated to\n  public componentDidMount() {\n    // start a timer for the clock:\n    this.timer = window.setInterval(this.updateTime, 1000);\n  }\n\n  // gets called just before navigating away from the route\n  public componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  // update the current time\n  public updateTime = () => {\n    this.setState({ time: Date.now() });\n  };\n\n  public increment = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n  public render({ user }: Props, { time, count }: State) {\n    return (\n      <div class={style.profile}>\n        <h1>Profile: {user}</h1>\n        <p>This is the user profile for a user named {user}.</p>\n\n        <div>Current time: {new Date(time).toLocaleString()}</div>\n\n        <p>\n          <button onClick={this.increment}>Click Me</button> Clicked {count}{' '}\n          times.\n        </p>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile\",\"page-enter\":\"page-enter\",\"pageEnter\":\"page-enter\",\"page-enter-active\":\"page-enter-active\",\"pageEnterActive\":\"page-enter-active\",\"page-exit\":\"page-exit\",\"pageExit\":\"page-exit\",\"page-exit-active\":\"page-exit-active\",\"pageExitActive\":\"page-exit-active\"};"],"sourceRoot":""}